import React from "react";

import Button from "direct-core/UI/Button";

class RecordVoice extends React.PureComponent {

  chuncks = []
  reader = new FileReader()

  componentDidMount(){

    this.reader.onloadend = () => {
      let count = []
      for( let r of new Int8Array( this.reader.result ) ){
        count[r] === undefined ? count[r] = 0 : count[r]++
      }
      //console.log( count );
      let max = -Infinity;
      let index = 0;
      for( let i = 0 ; i < count.length ; i++ ){
        if( count[i] > max ){
          max = count[i]
          index = i;
        }
      }
      console.log( index , max );
    }

    navigator.mediaDevices.getUserMedia({
      audio: true
    }).then( stream => {
        this.mediaRecorder = new MediaRecorder( stream )
        this.mediaRecorder.ondataavailable = ev => {
        this.chuncks.push( ev.data )
        this.analysis( new Blob( [ev.data] ) );
      }

    }).catch( err => {
      console.log( err );
    })
  }

  getAudio = ref => this.audio = ref

  analysis( data ){
    this.reader.readAsArrayBuffer( data )
  }

  startRecord = () => {
    if( this.mediaRecorder.state === "recording" ){
      return
    }
    this.mediaRecorder.start();
    setTimeout( this.stopRecord , 600 );
  }

  stopRecord = () => {
    this.mediaRecorder.stop();
    this.startRecord();
  }

  mergeRecords = () => {
    var blob = new Blob( this.chuncks );

    console.log( blob );
    console.log( this.chuncks );
    this.chuncks = [];
    var audioURL = URL.createObjectURL( blob );
    this.audio.src = audioURL;
  }

  render(){
    return (
      <React.Fragment>
        <Button
          onClick={this.startRecord}
          text="开始"
        />
        <Button
          onClick={this.mergeRecords}
          text="合成"
        />
        <audio
          controls
          ref={this.getAudio}
        />
      </React.Fragment>
    )
  }
};

export default RecordVoice;
